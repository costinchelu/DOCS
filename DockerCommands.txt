docker version

docker info

docker container ls
docker container ls -a
docker image ls
docker network ls

docker container run --publish 80:80 nginx
docker container run --publish 80:80 --detach nginx
docker container run --publish 80:80 --detach --name webhost nginx
docker container run -d --name new_nginx --network my_app_net nginx
docker container run -d --name mysqldb -p 3306:3306 -e MYSQL_RANDOM_ROOT_PASSWORD=true mysql

docker container run -it --name proxy nginx bash
docker container run -it --name ubuntu ubuntu
docker container run -it alpine bash
docker container run -it alpine sh
docker container run --rm -it centos:7 bash

docker container start -ai ubuntu
docker container exec -it mysql bash

docker container logs webhost
docker container top webhost

docker container stop webhost
docker container rm 63f 690 ode

docker pull alpine
docker pull mysql/mysql-server
docker history nginx:latest
docker image inspect nginx

docker image push bretfisher/nginx
docker image push bretfisher/nginx bretfisher/nginx:testing
docker image tag nginx-with-html:latest bretfisher/nginx-with-html:latest

docker container inspect --format '{{ .NetworkSettings.IPAddress }}' webhost
docker network create my_app_net
docker network connect webhost
docker container disconnect webhost
docker network inspect my_app_net

docker image build -t customnginx .

docker container run -d --name mysql1 --rm -p 3306:3307 -e MYSQL_ROOT_PASSWORD=pass -v mysql-db:/var/lib/mysql mysql
docker container start mysql -p 3307:3307 -e MYSQL_ROOT_PASSWORD=pass -v mysql-db:/var/lib/mysql mysql
docker container run -d --name nginx -p 80:80 -v $(pwd):/usr/share/nginx/html nginx
docker volume inspect mysql-db

**********************************************************************************************************************************************

MONGODB container
docker volume create v1mongo
docker container run --name mongo1 -d -p 27017:27017 --expose 27017 -e MONGO_INITDB_ROOT_USERNAME=mongo -e MONGO_INITDB_ROOT_PASSWORD=mongo -v v1mongo:/data/db mongo
docker logs -f mongo1
docker container stop mongo1
docker container start mongo1

MYSQL container
docker volume create v1mysql
docker container run --name mysql1 -d -p 3307:3306 --expose 3307 -e MYSQL_ROOT_PASSWORD=mysql123 -v v1mysql:/var/lib/mysql mysql
docker logs -f mysql1
docker container stop mysql1
docker container start mysql1

RABBITMQ container
docker volume create v1rabbit
docker run --name rabmq1 --hostname hostrabbit -d -p 15672:15672 -p 5671:5671 -p 5672:5672 -v v1rabbit:/var/lib/rabbitmq rabbitmq:3-management
	management console username and password will be guest
docker logs rabmq1
docker container stop rabmq1

CENTOS container
docker run -d --name centos1 centos tail -f /dev/null
docker exec -it centos1 bash
sudo yum update
sudo yum install java-11-openjdk
sudo update-alternatives --config java
vim .bash_profile
	At the bottom of the file, add a line which specifies the location of JAVA_HOME in the following manner:
	JAVA_HOME=”/your/installation/path/” (like /usr/lib/jvm/java-11-openjdk-11.0.3.7-0.el7_6.x86_64/bin/java)

**********************************************************************************************************************************************

CLEAN DANGLING IMAGES
docker rmi $(docker images -q -f dangling=true)

CLEAN DANGLING VOLUMES
docker volume rm $(docker volume ls -f dangling=true -q)